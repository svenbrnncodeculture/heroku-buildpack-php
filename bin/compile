#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# config
APACHE_VERSION="2.2.24"
APACHE_PATH="apache"
PHP_VERSION="5.4.13"
PHP_PATH="php"

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

# move app things to www
mkdir -p $CACHE_DIR/www
mv * $CACHE_DIR/www
mv $CACHE_DIR/www .

# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

APACHE_URL="http://heroku.codeculture.de/apache.tar.gz"
echo "-----> Bundling Apache version $APACHE_VERSION"
curl --silent --max-time 60 --location "$APACHE_URL" | tar xz

PHP_URL="http://heroku.codeculture.de/php.tar.gz"
echo "-----> Bundling PHP version $PHP_VERSION"
curl --silent --max-time 60 --location "$PHP_URL" | tar xz

LMEMCACHED_URL="http://heroku.codeculture.de/libmemcached.tar.gz"
echo "-----> Bundling libmemcached"
curl --silent --max-time 60 --location "$LMEMCACHED_URL" | tar xz

LJPEG_URL="http://heroku.codeculture.de/libjpeg.tar.gz"
echo "-----> Bundling jpeg"
curl --silent --max-time 60 --location "$LJPEG_URL" | tar xz

LPNG_URL="http://heroku.codeculture.de/libpng.tar.gz"
echo "-----> Bundling libpng"
curl --silent --max-time 60 --location "$LPNG_URL" | tar xz

LYAML_URL="http://heroku.codeculture.de/yaml.tar.gz"
echo "-----> Bundling libyaml"
curl --silent --max-time 60 --location "$LYAML_URL" | tar xz


# update config files
cp $LP_DIR/conf/httpd.conf $APACHE_PATH/conf
cp $LP_DIR/conf/php.ini php

# make php available on bin
mkdir -p bin
ln -s /app/php/bin/php bin/php

cat >>boot.sh <<EOF
for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
done
touch /app/apache/logs/error_log
touch /app/apache/logs/access_log
tail -F /app/apache/logs/error_log &
tail -F /app/apache/logs/access_log &
export LD_LIBRARY_PATH=/app/php/ext
export PHP_INI_SCAN_DIR=/app/www
echo "Launching apache"
exec /app/apache/bin/httpd -DNO_DETACH
EOF

chmod +x boot.sh

# clean the cache
rm -rf $CACHE_DIR
